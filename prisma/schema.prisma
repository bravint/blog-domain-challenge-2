// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  username  String    @unique
  email     String    @unique
  password  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  post      Post[]
  comment   Comment[]
  profile   Profile?
}

model Profile {
  id         Int      @id @default(autoincrement())
  firstName  String
  lastName   String
  age        Int
  pictureUrl String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  user       User     @relation(fields: [userId], references: [id])
  userId     Int      @unique
}

model Post {
  id          Int                 @id @default(autoincrement())
  title       String              @unique
  content     String
  imgUrl      String
  publishedAt DateTime?
  createdAt   DateTime            @default(now())
  updatedAt   DateTime            @updatedAt
  categories  CategoriesonPosts[]
  user        User                @relation(fields: [userId], references: [id])
  userId      Int
  comment     Comment[]
}

model Comment {
  id        Int      @id @default(autoincrement())
  parentId  Int?
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  post      Post     @relation(fields: [postId], references: [id])
  postId    Int
}

model Category {
  id        Int                 @id @default(autoincrement())
  name      String              @unique
  createdAt DateTime            @default(now())
  updatedAt DateTime            @updatedAt
  posts     CategoriesonPosts[]
}

model CategoriesonPosts {
  post       Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId     Int
  category   Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  categoryId Int

  @@id([postId, categoryId])
}
